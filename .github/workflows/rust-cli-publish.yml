name: Rust CLI Publish

on:
  push:
    branches:
        - "master"
        - "next"
    paths:
    - 'zowex/**'
    - '.github/workflows/rust-cli*.yml'

jobs:

  release:

    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      ZOWEX_VERSION: ${{ steps.get-version.outputs.ZOWEX_VERSION }}

    steps:
    - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0

    - name: Get version
      id: get-version
      working-directory: zowex
      run: echo "ZOWEX_VERSION=$(cargo metadata --no-deps | jq -r .packages[0].version)" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5 # v1.13.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: native-v${{ steps.get-version.outputs.ZOWEX_VERSION }}
        name: Native Client Release ${{ steps.get-version.outputs.ZOWEX_VERSION }}
        body: |
          Native Zowe CLI client which communicates with a "daemon" version of Zowe CLI.
        draft: false
        prerelease: false
        makeLatest: false

    - uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
      with:
        name: repo
        path: |
          zowex/**
          !.git


  build-linux:
    name: Build Linux

    needs: release

    runs-on: ubuntu-latest

    steps:
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@d76c2a93c593483c9892fd8d2538734f73ed8588 # stable

    - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: repo

    - name: Prepare Cross
      run: cargo install cross@0.2.5

    # Need to build in container with old version of GLIBC to support RHEL 7
    # https://kobzol.github.io/rust/ci/2021/05/07/building-rust-binaries-in-ci-that-work-with-older-glibc.html
    - name: Build
      run: cross build --verbose --release

    - name: Create Archive
      run: |
        cd target/x86_64-unknown-linux-gnu/release
        tar -cvzf zowe.tgz zowe
        mv zowe.tgz zowe-linux.tgz

    - name: Upload Release Asset
      id: upload-release-asset
      uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5 # v1.13.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: native-v${{ needs.release.outputs.ZOWEX_VERSION }}
        name: Native Client Release ${{ needs.release.outputs.ZOWEX_VERSION }}
        allowUpdates: true
        artifacts: target/x86_64-unknown-linux-gnu/release/zowe-linux.tgz
        artifactContentType: application/octet-stream
        removeArtifacts: false
        replacesArtifacts: false


  build-macos:
    name: Build MacOS

    needs: release

    runs-on: macos-latest

    steps:

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@d76c2a93c593483c9892fd8d2538734f73ed8588 # stable
      with:
        targets: aarch64-apple-darwin

    - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: repo

    - name: Build
      run: |
        cargo build --verbose --release --target aarch64-apple-darwin
        cargo build --verbose --release --target x86_64-apple-darwin
        mkdir -p target/release && cd target/release
        mv ../aarch64-apple-darwin/release/zowe zowe.aarch64 && mv ../x86_64-apple-darwin/release/zowe zowe.x86_64
        lipo -create -output zowe zowe.aarch64 zowe.x86_64

    - name: Create Archive
      run: |
        cd target/release
        tar -cvzf zowe.tgz zowe
        mv zowe.tgz zowe-macos.tgz

    - name: Upload Release Asset
      id: upload-release-asset
      uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5 # v1.13.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: native-v${{ needs.release.outputs.ZOWEX_VERSION }}
        name: Native Client Release ${{ needs.release.outputs.ZOWEX_VERSION }}
        allowUpdates: true
        artifacts: target/release/zowe-macos.tgz
        artifactContentType: application/octet-stream
        removeArtifacts: false
        replacesArtifacts: false


  build-windows:
    name: Build Windows

    needs: release

    runs-on: windows-latest

    steps:

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@d76c2a93c593483c9892fd8d2538734f73ed8588 # stable

    - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: repo

    - name: Build
      run: cargo build --verbose --release
      env:
        RUSTFLAGS: "-Ctarget-feature=+crt-static"

    - name: Create Archive
      run: |
        cd target/release
        tar -cvzf zowe.tgz zowe.exe
        mv zowe.tgz zowe-windows.tgz

    - name: Upload Release Asset
      id: upload-release-asset
      uses: ncipollo/release-action@6c75be85e571768fa31b40abf38de58ba0397db5 # v1.13.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag: native-v${{ needs.release.outputs.ZOWEX_VERSION }}
        name: Native Client Release ${{ needs.release.outputs.ZOWEX_VERSION }}
        allowUpdates: true
        artifacts: target/release/zowe-windows.tgz
        artifactContentType: application/octet-stream
        removeArtifacts: false
        replacesArtifacts: false
